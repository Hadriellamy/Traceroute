<div class="px-4 py-10 sm:px-6 sm:py-28 lg:px-8 xl:px-28 xl:py-32">
  


      <div class="w-full sm:w-auto">


        <div class="bg-blue-50">
          <div class="container mx-auto p-4">
              <h1 class="text-3xl font-bold mb-6 text-blue-800">Interface Traceroute</h1>
              <div class="flex">
                  <div class="w-1/4 pr-4">
                      <select id="categorySelect" class="w-full p-2 mb-4 border border-blue-300 rounded">
                          <option value="">Sélectionnez une catégorie</option>
                          <option value="providers">Providers</option>
                          <option value="serveursParis">Serveurs Paris</option>
                      </select>
                      <ul id="ipList" class="bg-white rounded shadow-md"></ul>
                  </div>
                  <div class="w-3/4 flex flex-col">
                      <div class="flex mb-4">
                          <div id="mainTraceroute" class="w-1/2 bg-white p-4 rounded shadow-md overflow-x-auto mr-2 h-96">
                              <p class="text-gray-500">Sélectionnez une IP pour afficher le traceroute.</p>
                          </div>
                          <div id="comparisonTraceroute" class="w-1/2 bg-white p-4 rounded shadow-md overflow-x-auto ml-2 h-96">
                              <p class="text-gray-500">Cliquez sur une date pour comparer les traceroutes.</p>
                          </div>
                      </div>
                      <div id="dateList" class="bg-white p-4 rounded shadow-md overflow-x-auto">
                          <p class="text-gray-500">Les dates de traceroute seront affichées ici.</p>
                      </div>
                  </div>
              </div>
          </div>
      
          <script>
              const ipData = {
                  providers: ['8.8.8.8', '1.1.1.1'],
                  serveursParis: ['192.168.1.1', '10.0.0.1']
              };
      
              const tracerouteData = {
                  '8.8.8.8': {
                      '2024-08-07 11:00:00': {
                          "report": {
                              "mtr": {
                                  "src": "paradox",
                                  "dst": "8.8.8.8",
                                  "tos": "0x0",
                                  "psize": "64",
                                  "bitpattern": "0x00",
                                  "tests": "10"
                              },
                              "hubs": [
                                  {"count": "1", "host": "_gateway", "Loss%": 0.00, "Snt": 10, "Last": 3.07, "Avg": 2.63, "Best": 1.36, "Wrst": 3.42, "StDev": 0.70},
                                  {"count": "2", "host": "lns26.nta.nv.net.il", "Loss%": 0.00, "Snt": 10, "Last": 7.48, "Avg": 5.79, "Best": 3.84, "Wrst": 7.48, "StDev": 0.98},
                                  {"count": "3", "host": "core2-lns26.nta.nv.net.il", "Loss%": 0.00, "Snt": 10, "Last": 3.91, "Avg": 6.18, "Best": 3.91, "Wrst": 7.66, "StDev": 1.08},
                                  {"count": "4", "host": "peering2-30-core2-nta.nv.net.il", "Loss%": 0.00, "Snt": 10, "Last": 5.93, "Avg": 4.94, "Best": 3.24, "Wrst": 7.07, "StDev": 1.26},
                                  {"count": "5", "host": "192.178.69.74", "Loss%": 0.00, "Snt": 10, "Last": 8.94, "Avg": 7.08, "Best": 5.41, "Wrst": 9.24, "StDev": 1.42},
                                  {"count": "6", "host": "216.239.50.135", "Loss%": 0.00, "Snt": 10, "Last": 7.24, "Avg": 6.18, "Best": 4.79, "Wrst": 7.47, "StDev": 1.03},
                                  {"count": "7", "host": "142.251.240.177", "Loss%": 0.00, "Snt": 10, "Last": 8.38, "Avg": 6.88, "Best": 5.17, "Wrst": 8.51, "StDev": 1.30},
                                  {"count": "8", "host": "dns.google", "Loss%": 0.00, "Snt": 10, "Last": 6.59, "Avg": 6.40, "Best": 5.12, "Wrst": 8.12, "StDev": 0.89}
                              ]
                          }
                      },
                      '2024-08-07 11:05:00': {
                          "report": {
                              "mtr": {
                                  "src": "paradox",
                                  "dst": "8.8.8.8",
                                  "tos": "0x0",
                                  "psize": "64",
                                  "bitpattern": "0x00",
                                  "tests": "10"
                              },
                              "hubs": [
                                  {"count": "1", "host": "_gateway", "Loss%": 0.00, "Snt": 10, "Last": 2.76, "Avg": 2.23, "Best": 0.89, "Wrst": 3.33, "StDev": 0.84},
                                  {"count": "2", "host": "lns26.nta.nv.net.il", "Loss%": 0.00, "Snt": 10, "Last": 5.83, "Avg": 7.30, "Best": 5.04, "Wrst": 13.29, "StDev": 2.25},
                                  {"count": "3", "host": "core2-lns26.nta.nv.net.il", "Loss%": 0.00, "Snt": 10, "Last": 7.19, "Avg": 6.57, "Best": 4.55, "Wrst": 7.78, "StDev": 0.99},
                                  {"count": "4", "host": "peering2-30-core2-nta.nv.net.il", "Loss%": 0.00, "Snt": 10, "Last": 5.03, "Avg": 4.65, "Best": 3.00, "Wrst": 7.26, "StDev": 1.20},
                                  {"count": "5", "host": "192.178.69.74", "Loss%": 0.00, "Snt": 10, "Last": 5.63, "Avg": 6.80, "Best": 4.88, "Wrst": 9.31, "StDev": 1.32},
                                  {"count": "6", "host": "216.239.50.135", "Loss%": 0.00, "Snt": 10, "Last": 7.25, "Avg": 6.76, "Best": 4.87, "Wrst": 7.93, "StDev": 0.97},
                                  {"count": "7", "host": "142.251.240.177", "Loss%": 0.00, "Snt": 10, "Last": 6.73, "Avg": 6.74, "Best": 5.79, "Wrst": 8.11, "StDev": 0.73},
                                  {"count": "8", "host": "dns.google", "Loss%": 0.00, "Snt": 10, "Last": 9.26, "Avg": 7.01, "Best": 5.79, "Wrst": 9.26, "StDev": 1.08}
                              ]
                          }
                      }
                  }
              };
      
              // Ajout de 10 dates supplémentaires
              for (let i = 2; i <= 11; i++) {
                  const date = new Date(2024, 7, 7, 11, i * 5);
                  const dateString = date.toISOString().slice(0, 16).replace('T', ' ');
                  tracerouteData['8.8.8.8'][dateString] = JSON.parse(JSON.stringify(tracerouteData['8.8.8.8']['2024-08-07 11:05:00']));
              }
      
              document.getElementById('categorySelect').addEventListener('change', (e) => {
                  const category = e.target.value;
                  const ipList = document.getElementById('ipList');
                  ipList.innerHTML = '';
                  if (category) {
                      ipData[category].forEach(ip => {
                          const li = document.createElement('li');
                          li.textContent = ip;
                          li.className = 'p-2 hover:bg-blue-100 cursor-pointer';
                          li.addEventListener('click', () => showTraceroute(ip));
                          ipList.appendChild(li);
                      });
                  }
              });
      
              function showTraceroute(ip) {
                  const mainTraceroute = document.getElementById('mainTraceroute');
                  const comparisonTraceroute = document.getElementById('comparisonTraceroute');
                  const dateList = document.getElementById('dateList');
                  if (tracerouteData[ip]) {
                      const dates = Object.keys(tracerouteData[ip]).sort();
                      const firstDate = dates[0];
                      const firstTraceroute = tracerouteData[ip][firstDate];
                      
                      mainTraceroute.innerHTML = formatTraceroute(firstTraceroute, firstDate);
                      comparisonTraceroute.innerHTML = '<p class="text-gray-500">Cliquez sur une date pour comparer les traceroutes.</p>';
                      
                      let dateListContent = '<h2 class="text-lg font-semibold mb-2">Dates disponibles :</h2>';
                      dateListContent += '<div class="flex flex-wrap">';
                      dates.forEach(date => {
                          dateListContent += `<button class="bg-blue-100 hover:bg-blue-200 text-blue-800 font-semibold py-2 px-4 rounded m-1" onclick="showTracerouteForDate('${ip}', '${date}')">${date}</button>`;
                      });
                      dateListContent += '</div>';
                      dateList.innerHTML = dateListContent;
                  } else {
                      mainTraceroute.innerHTML = '<p class="text-gray-500">Pas de données de traceroute disponibles pour cette IP.</p>';
                      comparisonTraceroute.innerHTML = '';
                      dateList.innerHTML = '';
                  }
              }
      
              function showTracerouteForDate(ip, date) {
                  const comparisonTraceroute = document.getElementById('comparisonTraceroute');
                  const traceroute = tracerouteData[ip][date];
                  comparisonTraceroute.innerHTML = formatTraceroute(traceroute, date);
              }
      
              function formatTraceroute(data, date) {
                  const hubs = data.report.hubs;
                  let table = `
                      <h2 class="text-xl font-bold mb-2">Traceroute pour ${date}</h2>
                      <table class="min-w-full bg-white">
                          <thead>
                              <tr class="bg-blue-100 text-blue-800">
                                  <th class="py-2 px-4 text-left">Hop</th>
                                  <th class="py-2 px-4 text-left">Host</th>
                                  <th class="py-2 px-4 text-right">Loss%</th>
                                  <th class="py-2 px-4 text-right">Snt</th>
                                  <th class="py-2 px-4 text-right">Last</th>
                                  <th class="py-2 px-4 text-right">Avg</th>
                                  <th class="py-2 px-4 text-right">Best</th>
                                  <th class="py-2 px-4 text-right">Wrst</th>
                                  <th class="py-2 px-4 text-right">StDev</th>
                              </tr>
                          </thead>
                          <tbody>
                  `;
      
                  hubs.forEach((hub, index) => {
                      table += `
                          <tr class="${index % 2 === 0 ? 'bg-blue-50' : 'bg-white'}">
                              <td class="py-2 px-4">${hub.count}</td>
                              <td class="py-2 px-4">${hub.host}</td>
                              <td class="py-2 px-4 text-right">${hub['Loss%'].toFixed(2)}</td>
                              <td class="py-2 px-4 text-right">${hub.Snt}</td>
                              <td class="py-2 px-4 text-right">${hub.Last.toFixed(2)}</td>
                              <td class="py-2 px-4 text-right">${hub.Avg.toFixed(2)}</td>
                              <td class="py-2 px-4 text-right">${hub.Best.toFixed(2)}</td>
                              <td class="py-2 px-4 text-right">${hub.Wrst.toFixed(2)}</td>
                              <td class="py-2 px-4 text-right">${hub.StDev.toFixed(2)}</td>
                          </tr>
                      `;
                  });
      
                  table += `
                          </tbody>
                      </table>
                  `;
      
                  return table;
              }
          </script>
      </div>

      
     
      
      


      </div>
    
  
</div>
